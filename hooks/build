#!/bin/bash
set -e +x

echo "### Run advanced ###"

function qemu(){
  echo "=> enable quemu"
  docker run --rm --privileged multiarch/qemu-user-static:register --reset
}

function manifest(){
  echo "=> install manifest-tool"
  local URL=https://github.com/estesp/manifest-tool/releases/download/v0.6.0/manifest-tool-linux-amd64
  curl -sLo ./manifest-tool ${URL}
  chmod +x ./manifest-tool
}

function multiarch(){
echo "=> push multiarch ${DOCKER_REPO}:${VERSION}"

cmd="./manifest-tool push from-args \
--platforms ${ARCHS} \
--template ${DOCKER_REPO}:${VERSION}-ARCH \
--target ${DOCKER_REPO}:${VERSION}"

echo ${cmd}
eval ${cmd}

}

function info(){
local folder="${1}"
ARCH=$(basename "${folder}")
VERSION=$(basename $(dirname "${folder}"))

echo "=> info arch=${ARCH} version=${VERSION}"
}

#################################

qemu
manifest

ARCHS="linux/arm,linux/amd64"



for df in $(find . -type f -name 'Dockerfile*');
do
  df_path=$(dirname ${df})
  if [[ "${df_path}" != "." ]]; then
    info "${df_path}"
    URL=https://github.com/containous/traefik/releases/download/v${VERSION}/traefik_linux-${ARCH}
    curl -sLo ${df_path}/traefik ${URL}
    chmod +x ${df_path}/traefik
  
    echo "=> Building ${DOCKER_REPO}:${VERSION}-${ARCH}"
    docker image build -t ${DOCKER_REPO}:${VERSION}-${ARCH} -f "${df}" "${df_path}"
    docker image push ${DOCKER_REPO}:${VERSION}-${ARCH}
  fi
done

for df in $(find . -type f -name 'Dockerfile*');
do
  df_path=$(dirname ${df})
  if [[ "${df_path}" != "." ]]; then
    info "${df_path}"
    if [[ $(docker image ls --filter reference=${DOCKER_REPO}:${VERSION}* | grep -v CREATED | wc -l) -gt 1 ]]; then
      echo "=> Building multiarch for ${VERSION}"
      multiarch  
    fi 
  fi
done

echo "=> get system info"
docker version
docker image ls

latest="$(ls -1d */ |sort -d -r | grep -v hooks|  head -n 1 | cut -f1 -d'/')"
echo "=> Build latest version: ${latest}"

cmd="./manifest-tool \
push from-args \
--platforms ${ARCHS} \
--template ${DOCKER_REPO}:${latest}-ARCH \
--target ${DOCKER_REPO}:latest"

echo ${cmd}
eval ${cmd}
